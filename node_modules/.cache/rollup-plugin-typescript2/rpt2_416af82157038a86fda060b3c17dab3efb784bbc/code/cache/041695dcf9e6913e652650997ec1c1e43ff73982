{"code":"import * as React from \"react\";\r\nexport default function useLocalStorage(key, initialValue) {\r\n    const [storedValue, setStoredValue] = React.useState(() => {\r\n        try {\r\n            const item = typeof window !== \"undefined\" && window.localStorage.getItem(key);\r\n            return item ? item : initialValue;\r\n        }\r\n        catch (error) {\r\n            return initialValue;\r\n        }\r\n    });\r\n    const setValue = (value) => {\r\n        try {\r\n            const valueToStore = value instanceof Function ? value(storedValue) : value;\r\n            setStoredValue(valueToStore);\r\n            window.localStorage.setItem(key, valueToStore);\r\n        }\r\n        catch (error) {\r\n            console.log(error);\r\n        }\r\n    };\r\n    return [storedValue, setValue];\r\n}\r\n//# sourceMappingURL=useLocalStorage.js.map","references":["/Users/rdonmez/Documents/react-use-watchlist/node_modules/@types/react/index.d.ts"],"map":"{\"version\":3,\"file\":\"useLocalStorage.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/useLocalStorage.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,KAAK,KAAK,MAAM,OAAO,CAAC;AAE/B,MAAM,CAAC,OAAO,UAAU,eAAe,CACrC,GAAW,EACX,YAAoB;IAEpB,MAAM,CAAC,WAAW,EAAE,cAAc,CAAC,GAAG,KAAK,CAAC,QAAQ,CAAC,GAAG,EAAE;QACxD,IAAI;YACF,MAAM,IAAI,GACR,OAAO,MAAM,KAAK,WAAW,IAAI,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC;YAEpE,OAAO,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,YAAY,CAAC;SACnC;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,YAAY,CAAC;SACrB;IACH,CAAC,CAAC,CAAC;IAEH,MAAM,QAAQ,GAAG,CAAC,KAAwB,EAAE,EAAE;QAC5C,IAAI;YACF,MAAM,YAAY,GAChB,KAAK,YAAY,QAAQ,CAAC,CAAC,CAAC,KAAK,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;YAEzD,cAAc,CAAC,YAAY,CAAC,CAAC;YAE7B,MAAM,CAAC,YAAY,CAAC,OAAO,CAAC,GAAG,EAAE,YAAY,CAAC,CAAC;SAChD;QAAC,OAAO,KAAK,EAAE;YACd,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAC;SACpB;IACH,CAAC,CAAC;IAEF,OAAO,CAAC,WAAW,EAAE,QAAQ,CAAC,CAAC;AACjC,CAAC\"}","dts":{"name":"/Users/rdonmez/Documents/react-use-watchlist/useLocalStorage.d.ts","writeByteOrderMark":false,"text":"export default function useLocalStorage(key: string, initialValue: string): [string, (value: Function | string) => void];\r\n"}}
